# Generated by Django 4.2.7 on 2024-03-08 15:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Food",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
                ("ingredients", models.TextField(null=True)),
                ("image", models.ImageField(null=True, upload_to="image/")),
                ("price", models.DecimalField(decimal_places=3, max_digits=10)),
                ("is_available", models.BooleanField(default=True)),
                (
                    "discount",
                    models.IntegerField(
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("foodparty", models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="FoodCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("FoodCategory", models.CharField(max_length=30)),
            ],
            options={
                "verbose_name": "Food Category",
                "verbose_name_plural": "Food Categories",
            },
        ),
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("image", models.ImageField(null=True, upload_to="image/restaurant")),
                ("phone", models.CharField(max_length=15)),
                ("rating", models.FloatField(editable=False, null=True)),
                ("card_id", models.BigIntegerField()),
                ("shipping_cost", models.IntegerField(null=True)),
                ("is_open", models.BooleanField(default=True)),
                (
                    "foods",
                    models.ManyToManyField(related_name="food", to="dashboard.food"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RestCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
            ],
            options={
                "verbose_name": "category",
                "verbose_name_plural": "categories",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_pending", models.BooleanField(default=True)),
                ("is_preparing", models.BooleanField(default=False)),
                ("is_sent", models.BooleanField(default=False)),
                ("is_delivered", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="WorkingHour",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start", models.TimeField()),
                ("end", models.TimeField()),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("saturday", "Saturday"),
                            ("sunday", "Sunday"),
                            ("monday", "Monday"),
                            ("thusday", "Thusday"),
                            ("wednesday", "Wednesday"),
                            ("thursday", "Thursday"),
                            ("friday", "Friday"),
                        ],
                        max_length=30,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "friday",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="friday",
                        to="dashboard.workinghour",
                    ),
                ),
                (
                    "monday",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="monday",
                        to="dashboard.workinghour",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule",
                        to="dashboard.restaurant",
                    ),
                ),
                (
                    "saturday",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saturday",
                        to="dashboard.workinghour",
                    ),
                ),
                (
                    "sunday",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sunday",
                        to="dashboard.workinghour",
                    ),
                ),
                (
                    "thursday",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="thursday",
                        to="dashboard.workinghour",
                    ),
                ),
                (
                    "thusday",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="thusday",
                        to="dashboard.workinghour",
                    ),
                ),
                (
                    "wednesday",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wednesday",
                        to="dashboard.workinghour",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RestaurantAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        choices=[
                            ("Rasht", "Rasht"),
                            ("Lahijan", "Lahijan"),
                            ("Tehran", "Tehran"),
                            ("Karaj", "Karaj"),
                            ("Ghazvin", "Ghazvin"),
                            ("Tabriz", "Tabriz"),
                            ("Booshehr", "Booshehr"),
                            ("Bandar_abbas", "Bandar Abbas"),
                            ("Mashhad", "Mashhad"),
                        ],
                        max_length=30,
                    ),
                ),
                ("address", models.TextField()),
                ("latitude", models.CharField(max_length=30)),
                ("longitude", models.CharField(max_length=30)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="address",
                        to="dashboard.restaurant",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="restaurant",
            name="restaurant_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="dashboard.restcategory",
            ),
        ),
        migrations.AddField(
            model_name="restaurant",
            name="seller",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="restaurant_owner",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.JSONField()),
                ("amount_paid", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.restaurant",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        default="is_pending",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.state",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="food",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="category_foods",
                to="dashboard.foodcategory",
            ),
        ),
    ]
